#!/usr/bin/python3
#
# accu-json-bib [--bib] [--journal CVU|Overload] JSON file <JSON file ....>
#
# Dump bib generated from JSON data

import argparse
import io
import pathlib
import re
import sys
import traceback

import accuwebsite

def print_bib(args):
    # Sort order to get newest first.
    for fname in sorted(args.input, reverse=True):
        with open(fname) as f:
            article = accuwebsite.read_json(f, True)
        if 'Journal' not in article or article['Journal'] != args.journal:
            continue
        print('@Article{')
        for s in ['Id', 'Title', 'Author', 'Note', 'Journal', 'Month', 'Year', 'CategoryID', 'CategoryName']:
            if s in article:
                val = article[s]
                if isinstance(val, str):
                    val = val.replace('\r\n', '\\n').replace('\n', '\\n')
                print('  {}={}'.format(s, val))
        print('}\n')

def main():
    parser = argparse.ArgumentParser(description='process Xaraya articles dumped to JSON')
    parser.add_argument('-j', '--journal', dest='journal',
                        action='store',
                        choices=['CVu', 'Overload'],
                        required=True,
                        help='\'CVu\' or \'Overload\'', metavar='JOURNAL')
    parser.add_argument('input', nargs='*',
                        help='input JSON file',
                        metavar='JSON file')
    args = parser.parse_args()

    try:
        print_bib(args)
        sys.exit(0)
    except Exception as e:
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    main()

# Local Variables:
# mode: Python
# End:
